name: Docker Publish

on:
  push:
    branches: [main, stable]
    tags: ['v*', '*.*.*']
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  packages: write
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker-build-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=stable,enable=${{ github.ref == 'refs/heads/stable' }}
            type=ref,event=tag
            type=sha,format=short

      # 1) Producci√≥n
      - name: Build & push production image
        uses: docker/build-push-action@v6
        with:
          context: .
          target: bolt-ai-production
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # 2) Desarrollo (etiquetamos con suffix dev)
      - name: Build & push development image
        uses: docker/build-push-action@v6
        with:
          context: .
          target: bolt-ai-development
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-${{ github.sha }}
      
      # 3) Preview (etiquetamos con suffix preview)
      - name: Build & push preview image
        uses: docker/build-push-action@v6
        with:
          context: .
          target: bolt-ai-preview
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:preview-latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:preview-${{ github.sha }}

      - name: Check manifest for production
        if: success()
        run: docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
